/* _mixins.scss */

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

@mixin css-animate($name, $time, $iteration, $delay, $ease) {
	animation: $name linear $time $iteration;
	-moz-animation: $name linear $time  $iteration;
	-webkit-animation: $name linear $time  $iteration;
	animation-delay: $delay;
	-moz-animation-delay: $delay; /* Firefox */
	-webkit-animation-delay: $delay; /* Safari and Chrome */
	-o-animation-delay: $delay; /* Opera */
	animation-timing-function:$ease;
	-moz-animation-timing-function:$ease; /* Firefox */
	-webkit-animation-timing-function:$ease; /* Safari and Chrome */
	-o-animation-timing-function:$ease; /* Opera */

}

@mixin css-transition($val, $time, $delay, $ease) {
	transition: $val  $time;
	-moz-transition: $val  $time;
	-webkit-transition: $val  $time ;
	transition-delay: $delay;
	-moz-transition-delay: $delay; /* Firefox */
	-webkit-transition-delay: $delay; /* Safari and Chrome */
	-o-transition-delay: $delay; /* Opera */
	transition-timing-function:$ease;
	-moz-transition-timing-function:$ease; /* Firefox */
	-webkit-transition-timing-function:$ease; /* Safari and Chrome */
	-o-transition-timing-function:$ease; /* Opera */

}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin gradient-ver($c-start, $start, $c-end, $end) {
	
	background: -moz-linear-gradient(top,  $c-start $start, $c-end $end); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop($start,$c-start), color-stop($end,$c-end)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  $c-start $start,$c-end $end); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  $c-start $start,$c-end $end); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  $c-start $start,$c-end $end); /* IE10+ */
	background: linear-gradient(to bottom,  $c-start $start,$c-end $end); /* W3C */
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($c-start)}', endColorstr='#{ie-hex-str($c-end)}');";
	  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($c-start)}', endColorstr='#{ie-hex-str($c-end)}');;
	  zoom: 1;

}
@mixin gradient-hori($c-start, $start, $c-end, $end){
background: $c-start; /* Old browsers */

background: -moz-linear-gradient(left,  $c-start $start, $c-end $end); /* FF3.6+ */

background: -webkit-gradient(linear, left top, right top, color-stop($start,$c-start), color-stop($end,$c-end)); /* Chrome,Safari4+ */

background: -webkit-linear-gradient(left,  $c-start $start,$c-end $end); /* Chrome10+,Safari5.1+ */

background: -o-linear-gradient(left,  $c-start $start,$c-end $end); /* Opera 11.10+ */

background: -ms-linear-gradient(left,  $c-start $start,$c-end $end); /* IE10+ */

background: linear-gradient(to right,  $c-start $start,$c-end $end); /* W3C */

filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$c-start', endColorstr='$c-end',GradientType=1 ); /* IE6-9 */


}

@mixin blur($val) {
	filter: blur($val);
	-webkit-filter: blur($val);
	-moz-filter: blur($val);
	-o-filter: blur($val);
	-ms-filter: blur($val);
}

@mixin filter-none {
	filter: none;
	-webkit-filter: none;
	-moz-filter: none;
	-o-filter: none;
	-ms-filter: none;
}
	

@mixin ellipse-text {
	white-space:nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin hardware-accel-style {
	-webkit-backface-visibility: hidden; 
	-moz-backface-visibility: hidden; 
	-ms-backface-visibility: hidden; 
	backface-visibility: hidden; 

}

@mixin translate3d($x, $y, $z) {
	-webkit-transform: translate3d($x, $y, $z); 
	-moz-transform: translate3d($x, $y, $z); 
	-ms-transform: translate3d($x, $y, $z); 
	transform: translate3d($x, $y, $z); 
	
	
}

@mixin scale($w, $h) {
	transform: scale($w, $h);
	-ms-transform: scale($w, $h); 
	-webkit-transform: scale($w, $h);
}


@mixin shape {
	position:relative;
	&:before,&:after{
		content: " ";
		height:0;
		width:0;
		position:absolute;
		pointer-events: none;
	}
}

@mixin rotate($deg){
	transform: rotate($deg);
	-webkit-transform: rotate($deg);
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-o-transform: rotate($deg);
}

@mixin rotate3d($x, $y, $z, $deg){
	transform: rotate3d($x, $y, $z, $deg);
	-webkit-transform: rotate3d($x, $y, $z, $deg);
	-moz-transform: rotate3d($x, $y, $z, $deg);
	-ms-transform:rotate3d($x, $y, $z, $deg);
	-o-transform: rotate3d($x, $y, $z, $deg);
	
}

@mixin translateRotateScale3d($x, $y, $z, $a, $b, $c, $deg, $scaleX, $scaleY) {
	-webkit-transform: translate3d($x, $y, $z) rotate3d($a, $b, $c, $deg) scale($scaleX, $scaleY);
	-moz-transform: translate3d($x, $y, $z) rotate3d($a, $b, $c, $deg) scale($scaleX, $scaleY);
	-ms-transform: translate3d($x, $y, $z) rotate3d($a, $b, $c, $deg) scale($scaleX, $scaleY);
	transform: translate3d($x, $y, $z) rotate3d($a, $b, $c, $deg) scale($scaleX, $scaleY);
	
}

@mixin preserve3d {
	-webkit-transform-style: preserve-3d;
	-moz-transform-style: preserve-3d;
	-ms-transform-style: preserve-3d;
	transform-style: preserve-3d;
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	-ms-backface-visibility: hidden;
	backface-visibility: hidden;
}

@mixin perspective($v, $x, $y) {
	perspective:$v;
	-webkit-perspective: $v;
	-ms-perspective:$v;
	-moz-perspective: $v;
	-webkit-perspective-origin: $x $y;
	-ms-perspective-origin:  $x $y;
	-moz-perspective-origin: $x $y;
	perspective-origin:  $x $y;
}